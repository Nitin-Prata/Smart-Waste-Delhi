"""init tables

Revision ID: c1b24ce67601
Revises: 
Create Date: 2025-08-22 01:27:20.161176

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c1b24ce67601'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('waste_bins')
    op.drop_table('waste_bin_readings')
    op.drop_table('air_quality_stations')
    op.drop_table('route_bins')
    op.drop_table('air_quality_readings')
    op.drop_table('air_quality_forecasts')
    op.drop_table('waste_predictions')
    op.drop_table('waste_collections')
    op.drop_table('collection_routes')
    op.drop_table('air_quality_alerts')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('air_quality_alerts',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('station_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('alert_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('severity', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('aqi_threshold', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('current_aqi', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('acknowledged', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('acknowledged_by', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('acknowledged_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('triggered_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('resolved_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['station_id'], ['air_quality_stations.id'], name='air_quality_alerts_station_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='air_quality_alerts_pkey')
    )
    op.create_table('collection_routes',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('route_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('route_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('start_location', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('end_location', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('estimated_duration', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_distance', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('optimized_sequence', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('optimization_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('scheduled_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='collection_routes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('waste_collections',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('bin_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('route_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('collection_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('collected_by', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('vehicle_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('waste_collected', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('fill_level_before', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('fill_level_after', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('collection_duration', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['bin_id'], ['waste_bins.id'], name='waste_collections_bin_id_fkey'),
    sa.ForeignKeyConstraint(['route_id'], ['collection_routes.id'], name='waste_collections_route_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='waste_collections_pkey')
    )
    op.create_table('waste_predictions',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('bin_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('prediction_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('predicted_fill_level', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('predicted_weight', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('collection_needed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('model_version', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('confidence_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['bin_id'], ['waste_bins.id'], name='waste_predictions_bin_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='waste_predictions_pkey')
    )
    op.create_table('air_quality_forecasts',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('station_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('forecast_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('forecast_hour', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('predicted_aqi', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('predicted_pm25', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('predicted_pm10', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('predicted_no2', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('predicted_so2', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('predicted_co', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('predicted_o3', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('confidence_lower', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('confidence_upper', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('model_version', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['station_id'], ['air_quality_stations.id'], name='air_quality_forecasts_station_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='air_quality_forecasts_pkey')
    )
    op.create_table('air_quality_readings',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('station_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('pm25', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('pm10', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('no2', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('so2', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('co', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('o3', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('aqi', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('aqi_category', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('temperature', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('humidity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('wind_speed', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('wind_direction', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('source', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('confidence', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['station_id'], ['air_quality_stations.id'], name='air_quality_readings_station_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='air_quality_readings_pkey')
    )
    op.create_table('route_bins',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('route_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('bin_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('sequence_order', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('preferred_time', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('collection_frequency', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['bin_id'], ['waste_bins.id'], name='route_bins_bin_id_fkey'),
    sa.ForeignKeyConstraint(['route_id'], ['collection_routes.id'], name='route_bins_route_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='route_bins_pkey')
    )
    op.create_table('air_quality_stations',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('station_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='air_quality_stations_pkey')
    )
    op.create_table('waste_bin_readings',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('bin_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('fill_level', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('weight', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('temperature', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('humidity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('methane_level', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('battery_level', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('signal_strength', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('sensor_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('reading_quality', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['bin_id'], ['waste_bins.id'], name='waste_bin_readings_bin_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='waste_bin_readings_pkey')
    )
    op.create_table('waste_bins',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('bin_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('capacity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('bin_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('installation_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('current_fill_level', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('last_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('sensor_status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('needs_collection', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('collection_priority', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='waste_bins_pkey'),
    sa.UniqueConstraint('bin_id', name='waste_bins_bin_id_key')
    )
    # ### end Alembic commands ###
